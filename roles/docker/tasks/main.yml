---
- name: Ensure old versions of Docker are not installed.
  package:
    name:
      - docker
      - docker.io
      - docker-engine
    state: absent

- name: Update apt cache
  apt:
    update_cache: yes
    cache_valid_time: 3600  # prevent redundant cache updates if the playbook is run multiple times
  become: yes

- name: Docker Desktop prerequisites
  apt:
    name:
      - ca-certificates
      - curl
      - gnupg
    state: present
  become: yes

- name: Ensure /etc/apt/keyrings directory exists
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker's official GPG key
  shell: |
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /etc/apt/keyrings/docker.gpg
  args:
    creates: /etc/apt/keyrings/docker.gpg
  become: yes

- name: Set permissions for Docker GPG key
  file:
    path: /etc/apt/keyrings/docker.gpg
    mode: a+r

# TODO check if this step works, had to run things manually to see what the issue was
- name: Add Docker repository
  shell: |
    echo "deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list
  args:
    creates: /etc/apt/sources.list.d/docker.list

- name: Update apt cache after adding Docker repository
  apt:
    update_cache: yes
  become: yes

- name: Install Docker and related components
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  become: yes

# Download latest Docker .deb file
- import_tasks: script.yml

- name: Install Docker DEB package
  apt:
    deb: "/tmp/docker.deb"
  become: yes

- name: Allow running Docker without sudo
  become: true
  user:
    name: "{{ ansible_user_id }}"
    groups: docker
    append: yes

# https://github.com/LorenzoBettini/ansible-ubuntu-playbook/blob/master/tasks/docker.yml#L34-L51
# Then, you have to explicitly start docker.service
# systemctl start docker.service.
# With service module, when running in Docker in molecule
# we get this error FAILED! =>
# "msg": "Could not find the requested service docker: host"
# with systemd module instead it works
- name: Do NOT enable service docker on boot
  become: yes
  ansible.builtin.systemd:
    name: docker.service
    enabled: no

# This way, as soon as we run a docker command docker.service starts
- name: Enable docker.socket on boot
  become: yes
  ansible.builtin.systemd:
    name: docker.socket
    enabled: yes

# TODO: https://docs.docker.com/desktop/install/ubuntu/#upgrade-docker-desktop
# - name: Upgrade Docker Desktop
